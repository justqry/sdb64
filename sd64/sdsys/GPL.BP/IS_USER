* IS_USER(USERNAME)
* Is username defined in /etc/passwd
* Copyright (c) String Database
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 3, or (at your option)
* any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software Foundation,
* Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
* 
*
* START-HISTORY:
* rev 0.9.0 Jan 25 mab initial commit
* END-HISTORY
*
* START-DESCRIPTION:
*
*    x = !is_user(username)
*
*    is username a valid linux user (found in /etc/passwd)
*
*    This function sets the STATUS() value to 0 if successful, 1 if the
*    specified user does not exist.
*
* END-DESCRIPTION
*
* START-CODE

$internal
function is_user(username)
$catalog !is_user

user_found = @false
set.status 0
* read the /etc/passwd file
openpath "/etc" to etc then 
  read rec from etc, "passwd" then 
    lns = dcount(rec, @FM)

    for i = 1 to lns
      uname = field(rec<i>,':',1)
      if uname = username then
        user_found = @true
        exit 
      end
    next i
  end else
  * cannot read /etc/passwd
    set.status 1
  end
end else
* cannot open /etc
  set.status 1
end

return user_found
end
